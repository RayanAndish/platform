/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ERC165StorageUpgradeable,
  ERC165StorageUpgradeableInterface,
} from "../../../../../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165StorageUpgradeable";
import { Contract, Interface, type ContractRunner } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ERC165StorageUpgradeable__factory {
  static readonly abi = _abi;
  static createInterface(): ERC165StorageUpgradeableInterface {
    return new Interface(_abi) as ERC165StorageUpgradeableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC165StorageUpgradeable {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ERC165StorageUpgradeable;
  }
}
