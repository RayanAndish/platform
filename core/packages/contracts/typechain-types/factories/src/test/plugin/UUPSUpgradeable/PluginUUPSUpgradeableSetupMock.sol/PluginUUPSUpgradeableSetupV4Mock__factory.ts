/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../../../../../common";
import type {
  PluginUUPSUpgradeableSetupV4Mock,
  PluginUUPSUpgradeableSetupV4MockInterface,
} from "../../../../../../src/test/plugin/UUPSUpgradeable/PluginUUPSUpgradeableSetupMock.sol/PluginUUPSUpgradeableSetupV4Mock";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ConflictingValues",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "fromBuild",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "thisBuild",
        type: "uint16",
      },
    ],
    name: "InvalidUpdatePath",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "InstallationPrepared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "plugin",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "currentHelpers",
            type: "address[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct IPluginSetup.SetupPayload",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "UninstallationPrepared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "build",
        type: "uint16",
      },
      {
        components: [
          {
            internalType: "address",
            name: "plugin",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "currentHelpers",
            type: "address[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct IPluginSetup.SetupPayload",
        name: "payload",
        type: "tuple",
      },
    ],
    name: "UpdatePrepared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    name: "amazing",
    type: "event",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "_helpersCount",
        type: "uint160",
      },
    ],
    name: "mockHelperCount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "_lowerIndex",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "_upperIndex",
        type: "uint160",
      },
    ],
    name: "mockPermissionIndexes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dao",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "prepareInstallation",
    outputs: [
      {
        internalType: "address",
        name: "plugin",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "helpers",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "enum PermissionLib.Operation",
                name: "operation",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "where",
                type: "address",
              },
              {
                internalType: "address",
                name: "who",
                type: "address",
              },
              {
                internalType: "address",
                name: "condition",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "permissionId",
                type: "bytes32",
              },
            ],
            internalType: "struct PermissionLib.MultiTargetPermission[]",
            name: "permissions",
            type: "tuple[]",
          },
        ],
        internalType: "struct IPluginSetup.PreparedSetupData",
        name: "preparedSetupData",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dao",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "plugin",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "currentHelpers",
            type: "address[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IPluginSetup.SetupPayload",
        name: "_payload",
        type: "tuple",
      },
    ],
    name: "prepareUninstallation",
    outputs: [
      {
        components: [
          {
            internalType: "enum PermissionLib.Operation",
            name: "operation",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "where",
            type: "address",
          },
          {
            internalType: "address",
            name: "who",
            type: "address",
          },
          {
            internalType: "address",
            name: "condition",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "permissionId",
            type: "bytes32",
          },
        ],
        internalType: "struct PermissionLib.MultiTargetPermission[]",
        name: "permissions",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dao",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_currentBuild",
        type: "uint16",
      },
      {
        components: [
          {
            internalType: "address",
            name: "plugin",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "currentHelpers",
            type: "address[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IPluginSetup.SetupPayload",
        name: "_payload",
        type: "tuple",
      },
    ],
    name: "prepareUpdate",
    outputs: [
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "helpers",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "enum PermissionLib.Operation",
                name: "operation",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "where",
                type: "address",
              },
              {
                internalType: "address",
                name: "who",
                type: "address",
              },
              {
                internalType: "address",
                name: "condition",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "permissionId",
                type: "bytes32",
              },
            ],
            internalType: "struct PermissionLib.MultiTargetPermission[]",
            name: "permissions",
            type: "tuple[]",
          },
        ],
        internalType: "struct IPluginSetup.PreparedSetupData",
        name: "preparedSetupData",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolVersion",
    outputs: [
      {
        internalType: "uint8[3]",
        name: "",
        type: "uint8[3]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a034606d57601f6118cc38819003918201601f19168301916001600160401b03831184841017607257808492602094604052833981010312606d57516001600160a01b0381168103606d57608052604051611843908161008982396080518181816101370152610d810152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a714610e5b575080632ae9c60014610dea57806346c2002414610da55780635c60da1b14610d615780639cb0a12414610b57578063a8a9c29e14610447578063bc93bb2e146103cf578063d826f88f146103625763f10832f11461008257600080fd5b3461035d57604060031936011261035d5761009b610f2a565b60243567ffffffffffffffff811161035d576100bb9036906004016110f7565b906100c4611231565b906040517fc4d66de80000000000000000000000000000000000000000000000000000000060208201526001600160a01b03821660248201526024815261010c6044826110d4565b6040519061040c8083019183831067ffffffffffffffff84111761034757839261015c9261140285397f000000000000000000000000000000000000000000000000000000000000000090611381565b03906000f091821561033b576101706112ee565b81526001546000906001600160a01b0316801561033457905b6002546001600160a01b0316801561032b57945b6001600160a01b03861695866001600160a01b0385161161031c576101ca846001600160a01b03926113a1565b1693601f196101f16101db8761114e565b966101e960405198896110d4565b80885261114e565b01835b8181106102e75750506001600160a01b0397845b89811689811015610288578a9161028060019260405190610228826110b8565b89825280602083015260408201528860608201527fa280eec51ab8e1bc4b6b0c1b7f1bde785761b787a49db404e3e9338ed9b016ef60808201528461026d8b856113a1565b1690610279828d6113d7565b528a6113d7565b500116610208565b8a856102e3867f788f140d37f3ca802bffe7ec3134153ce98a1c58d10bbb00a4b6d449beca9ac8878e8e60208501526102c660405192839283611381565b0390a160405193849316835260406020840152604083019061106f565b0390f35b6020906040516102f6816110b8565b868152868382015286604082015286606082015286608082015282828a010152016101f4565b600483633a4013cd60e21b8152fd5b5060039461019d565b5080610189565b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b3461035d57600060031936011261035d5773ffffffffffffffffffffffffffffffffffffffff196001541660015573ffffffffffffffffffffffffffffffffffffffff196002541660025573ffffffffffffffffffffffffffffffffffffffff1960005416600055600080f35b3461035d57604060031936011261035d576103e8610f2a565b602435906001600160a01b03821680920361035d576001600160a01b031673ffffffffffffffffffffffffffffffffffffffff19600154161760015573ffffffffffffffffffffffffffffffffffffffff196002541617600255600080f35b3461035d57606060031936011261035d57610460610f2a565b6024359061ffff82169182810361035d576044359267ffffffffffffffff841161035d57606060031985600401953603011261035d5760606104a0611231565b91600381036106695750600154600091906001600160a01b0316801561066057925b6002546001600160a01b0316801561065757955b6001600160a01b03871696876001600160a01b0387161161064857610503866001600160a01b03926113a1565b1695601f1961052a6105148961114e565b986105226040519a8b6110d4565b808a5261114e565b01855b818110610613575050855b6001600160a01b038116898110156105c6576001600160a01b03916105be8a6001936105b7866105af8e8e60405195610570876110b8565b818752806020880152604087015260608601527fa280eec51ab8e1bc4b6b0c1b7f1bde785761b787a49db404e3e9338ed9b016ef6080860152876113a1565b1680936113d7565b528b6113d7565b500116610538565b50509194509195506105f192506105eb610605976102e39660208701525b3690611166565b91611298565b604051938493604085526040850190610ff1565b90838203602085015261106f565b602090604051610622816110b8565b888152888382015288604082015288606082015288608082015282828c0101520161052d565b600485633a4013cd60e21b8152fd5b506004956104d6565b506003926104c2565b600181969296959493951490818015610b4d575b61069a575b50506102e3926106059594926105eb6105f1936105e4565b9194509480916106a8611231565b966109b8575b6002146107ec575b506106cb6106c43686611166565b8385611298565b60015485916000916001600160a01b031680156107e357925b6002546001600160a01b031680156107da57955b6001600160a01b03871696876001600160a01b0387161161064857610725866001600160a01b03926113a1565b1695601f196107366105148961114e565b01855b8181106107a5575050855b6001600160a01b03811689811015610784576001600160a01b039161077c8a6001936105b7866105af8e8e60405195610570876110b8565b500116610744565b50506020999099019590955290969095939450929150839050610605610682565b6020906040516107b4816110b8565b888152888382015288604082015288606082015288608082015282828c01015201610739565b506005956106f8565b506004926106e4565b9490506107fb939192936112ee565b81526040517f14045768000000000000000000000000000000000000000000000000000000006020820152600481526108356024826110d4565b946000916001600160a01b03600154168015156000146109af57935b6002546001600160a01b031680156109a657965b6001600160a01b03881697886001600160a01b0388161161099757610892876001600160a01b03926113a1565b1696601f196108b96108a38a61114e565b996108b16040519b8c6110d4565b808b5261114e565b01865b818110610963575050865b6001600160a01b0381168a81101561094c576001600160a01b03916109448b60019361093d866105af8f8f8f60405196610900886110b8565b82885280602089015260408801528601527fa280eec51ab8e1bc4b6b0c1b7f1bde785761b787a49db404e3e9338ed9b016ef6080860152876113a1565b528c6113d7565b5001166108c7565b5050955095925095509591506020860152856106b6565b602090604051610972816110b8565b8981528983820152896040820152898982015289608082015282828d010152016108bc565b600486633a4013cd60e21b8152fd5b50600396610865565b50600293610851565b9593929491506109c66112ee565b84526040517f7cef469500000000000000000000000000000000000000000000000000000000602082015260048152610a006024826110d4565b936000926001600160a01b0360015416801515600014610b4457945b6002546001600160a01b03168015610b3b57975b6001600160a01b03891698896001600160a01b03891611610b2c57610a5d886001600160a01b03926113a1565b1697601f19610a84610a6e8b61114e565b9a610a7c6040519c8d6110d4565b808c5261114e565b01875b818110610af7575050875b6001600160a01b0381168b811015610add576001600160a01b0391610ad58c600193610ace868f8f908f916105af9260405196610900886110b8565b528d6113d7565b500116610a92565b5050955095509560029298919750602089015290506106ae565b808b6020809360405192610b0a846110b8565b8d84528d838501528d60408501528d8d8501528d608085015201015201610a87565b600487633a4013cd60e21b8152fd5b50600397610a30565b50600194610a1c565b506002811461067d565b3461035d57604060031936011261035d57610b70610f2a565b6024359067ffffffffffffffff821161035d576060600319833603011261035d576001546000906001600160a01b03168015610d5a57905b6002546001600160a01b03168015610d5157915b6001600160a01b03831692836001600160a01b0383161161031c57610be9826001600160a01b03926113a1565b1691601f19610c10610bfa8561114e565b94610c0860405196876110d4565b80865261114e565b01815b818110610d1c575050815b6001600160a01b03811685811015610cac576001600160a01b0391610ca460019260405190610c4c826110b8565b84825280602083015260408201528560608201527fa280eec51ab8e1bc4b6b0c1b7f1bde785761b787a49db404e3e9338ed9b016ef608082015284610c9188856113a1565b1690610c9d828a6113d7565b52876113d7565b500116610c1e565b6102e3857ffcfdc3b542b4ad36e57b00e7f79a3d4121a844f1b7fa32829e4914320236f4746001600160a01b038a610d05610ceb8e3690600401611166565b60405193849316835260406020840152604083019061125b565b0390a1604051918291602083526020830190610f54565b602090604051610d2b816110b8565b848152848382015284604082015284606082015284608082015282828801015201610c13565b50600191610bbc565b5080610ba8565b3461035d57600060031936011261035d5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461035d57602060031936011261035d576001600160a01b03610dc6610f2a565b1673ffffffffffffffffffffffffffffffffffffffff196000541617600055600080f35b3461035d57600060031936011261035d57606080604051610e0b82826110d4565b369037604051610e1a8161109c565b60018152600460208201526000604082015260405190816000905b60038210610e4257505050f35b60208060019260ff865116815201930191019091610e35565b3461035d57602060031936011261035d57600435907fffffffff00000000000000000000000000000000000000000000000000000000821680920361035d57817f99718b500000000000000000000000000000000000000000000000000000000060209314908115610f00575b8115610ed6575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501483610ecf565b7f2ae9c6000000000000000000000000000000000000000000000000000000000081149150610ec8565b600435906001600160a01b038216820361035d57565b35906001600160a01b038216820361035d57565b90602080835192838152019201906000905b808210610f735750505090565b909192835160008151906003821015610fdd575082608060209360a093600196526001600160a01b038582015116858401526001600160a01b0360408201511660408401526001600160a01b03606082015116606084015201516080820152019401920190610f66565b80634e487b7160e01b602492526021600452fd5b919082519283825260005b84811061101d575050601f19601f8460006020809697860101520116010190565b80602080928401015182828601015201610ffc565b906020808351928381520192019060005b8181106110505750505090565b82516001600160a01b0316845260209384019390920191600101611043565b6110999160206110888351604084526040840190611032565b920151906020818403910152610f54565b90565b6060810190811067ffffffffffffffff82111761034757604052565b60a0810190811067ffffffffffffffff82111761034757604052565b90601f601f19910116810190811067ffffffffffffffff82111761034757604052565b81601f8201121561035d5780359067ffffffffffffffff8211610347576040519261112c6020601f19601f86011601856110d4565b8284526020838301011161035d57816000926020809301838601378301015290565b67ffffffffffffffff81116103475760051b60200190565b919060608382031261035d576040519061117f8261109c565b819361118a81610f40565b8352602081013567ffffffffffffffff811161035d57810182601f8201121561035d578035906111b98261114e565b916111c760405193846110d4565b80835260208084019160051b8301019185831161035d57602001905b82821061121957505050602084015260408101359167ffffffffffffffff831161035d5760409261121492016110f7565b910152565b6020809161122684610f40565b8152019101906111e3565b604051906040820182811067ffffffffffffffff8211176103475760405260606020838281520152565b611099916001600160a01b03825116815260406112876020840151606060208501526060840190611032565b920151906040818403910152610ff1565b6112e97fa7c20c270816878ef6c3ea21c83d577618b234443168362c35e7023422f6d04b9361ffff6001600160a01b039460405195869516855216602084015260606040840152606083019061125b565b0390a1565b6000546001600160a01b03168015611371576001600160a01b03905b166113148161114e565b61132160405191826110d4565b818152601f196113308361114e565b0136602083013760005b6001600160a01b0381168381101561136a576001600160a01b039181611362600193866113d7565b52011661133a565b5050905090565b506001600160a01b03600361130a565b6040906001600160a01b0361109994931681528160208201520190610ff1565b906001600160a01b03809116911603906001600160a01b0382116113c157565b634e487b7160e01b600052601160045260246000fd5b80518210156113eb5760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe608060405261040c80380380610014816101f7565b9283398101906040818303126101f25780516001600160a01b038116918282036101f2576020810151906001600160401b0382116101f257019183601f840112156101f25782519261006d61006885610232565b6101f7565b938085526020850195602082840101116101f25785602061008e930161024d565b813b15610197577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511580159061018f575b610109575b60405160e890816103248239f35b60008061017e9461011a60606101f7565b94602786527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c6020870152660819985a5b195960ca1b60408701525190845af43d15610187573d9161016e61006884610232565b9283523d6000602085013e610270565b503880806100fb565b606091610270565b5060006100f6565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761021c57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161021c57601f01601f191660200190565b60005b8381106102605750506000910152565b8181015183820152602001610250565b919290156102d25750815115610284575090565b3b1561028d5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156102e55750805190602001fd5b6044604051809262461bcd60e51b825260206004830152610315815180928160248601526020868601910161024d565b601f01601f19168101030190fdfe6080604052361560605760008073ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416368280378136915af43d6000803e15605b573d6000f35b3d6000fd5b60008073ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416368280378136915af43d6000803e15605b573d6000f3fea2646970667358221220993eafbdeb8055a2fd7aeeab86fbd1bea6d5b1c93c2dfb12168532a2a9e84caa64736f6c634300081c0033a264697066735822122015e5329bfe82b879ca6f0765d22031bcfbc29b23d082fb2d87936995a6e2931c64736f6c634300081c0033";

type PluginUUPSUpgradeableSetupV4MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PluginUUPSUpgradeableSetupV4MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PluginUUPSUpgradeableSetupV4Mock__factory extends ContractFactory {
  constructor(...args: PluginUUPSUpgradeableSetupV4MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    implementation: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(implementation, overrides || {});
  }
  override deploy(
    implementation: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(implementation, overrides || {}) as Promise<
      PluginUUPSUpgradeableSetupV4Mock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PluginUUPSUpgradeableSetupV4Mock__factory {
    return super.connect(runner) as PluginUUPSUpgradeableSetupV4Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PluginUUPSUpgradeableSetupV4MockInterface {
    return new Interface(_abi) as PluginUUPSUpgradeableSetupV4MockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PluginUUPSUpgradeableSetupV4Mock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PluginUUPSUpgradeableSetupV4Mock;
  }
}
