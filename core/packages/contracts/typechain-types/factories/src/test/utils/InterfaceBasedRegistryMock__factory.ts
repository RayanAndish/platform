/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../../../common";
import type {
  InterfaceBasedRegistryMock,
  InterfaceBasedRegistryMockInterface,
} from "../../../../src/test/utils/InterfaceBasedRegistryMock";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "ContractAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "ContractERC165SupportInvalid",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "ContractInterfaceInvalid",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        internalType: "address",
        name: "where",
        type: "address",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "permissionId",
        type: "bytes32",
      },
    ],
    name: "DaoUnauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "Registered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "REGISTER_PERMISSION_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_REGISTRY_PERMISSION_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dao",
    outputs: [
      {
        internalType: "contract IDAO",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "entries",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IDAO",
        name: "_dao",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "targetInterface",
        type: "bytes4",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetInterfaceId",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a08060405234602f57306080526113849081610035823960805181818160e4015281816105a201526108770152f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80633659cfe6146100b757806339871111146100b25780634162169f146100ad57806344162ef8146100a85780634420e486146100a35780634f1ef2861461009e57806352d1902d1461009957806374574eb714610094578063f29ee1251461008f5763f2c59caf1461008a57600080fd5b6106db565b610698565b61065d565b610587565b61050b565b61032d565b6102ea565b6102c3565b610197565b346101815760206003193601126101815761017f6004356100d781610186565b6101416001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661011081301415610716565b6001600160a01b037f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541614610787565b61015b6001600160a01b0360975416369033903090610cdb565b60405190602061016b81846104c7565b60008352601f198101903690840137610a98565b005b600080fd5b6001600160a01b0381160361018157565b34610181576040600319360112610181576004356101b481610186565b6024357fffffffff00000000000000000000000000000000000000000000000000000000811681036101815761023290600054926102166102006101fc8660ff9060081c1690565b1590565b809581966102b5575b8115610295575b506107f8565b83610229600160ff196000541617600055565b61027c57610c48565b61023857005b61024861ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989080602081015b0390a1005b61029061010061ff00196000541617600055565b610c48565b303b159150816102a7575b5038610210565b60ff166001149050386102a0565b600160ff8216109150610209565b346101815760006003193601126101815760206001600160a01b0360975416604051908152f35b3461018157600060031936011261018157602060c95460e01b7fffffffff0000000000000000000000000000000000000000000000000000000060405191168152f35b346101815760206003193601126101815760043561034a81610186565b6103646001600160a01b0360975416369033903090610e45565b6001600160a01b0381168060005260ca60205260ff6040600020541661046b57506103a860c95460e01b6103978361117b565b9081610459575b8161044e57501590565b61041857610277816103fe6103f17f2d3734a8e47ac8316e500ac231c90a6e1848ca2285f40d07eaa52005e4b3a0e9946001600160a01b031660005260ca602052604060002090565b600160ff19825416179055565b6040516001600160a01b0390911681529081906020820190565b7f71023c8a000000000000000000000000000000000000000000000000000000006000526001600160a01b031660045260246000fd5b6101fc915083611225565b9050610464836111da565b159061039e565b7ffdcce17f0000000000000000000000000000000000000000000000000000000060005260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f601f19910116810190811067ffffffffffffffff8211176104ea57604052565b610498565b67ffffffffffffffff81116104ea57601f01601f191660200190565b60406003193601126101815760043561052381610186565b6024359067ffffffffffffffff8211610181573660238301121561018157816004013590610550826104ef565b9161055e60405193846104c7565b808352366024828601011161018157602081600092602461017f97018387013784010152610869565b34610181576000600319360112610181576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105f3576040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152602090f35b608460405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b346101815760006003193601126101815760206040517f60b96ff9fb5f29153c29c1747515b8be4ee523d686cc6f453ec294b0afa729328152f35b34610181576020600319360112610181576001600160a01b036004356106bd81610186565b1660005260ca602052602060ff604060002054166040519015158152f35b346101815760006003193601126101815760206040517fffb51f414ffad7ae6aa3ebe7a53cbd03087d492fd38b0f6cbaa8704085baac458152f35b1561071d57565b608460405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152fd5b1561078e57565b608460405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152fd5b156107ff57565b608460405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b906108a36001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661011081301415610716565b6108bd6001600160a01b0360975416369033903090610cdb565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156108f357506108f190611098565b565b604051907f52d1902d0000000000000000000000000000000000000000000000000000000082526020826004816001600160a01b0387165afa600092816109db575b506109a55760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608490fd5b6108f1926109d67f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60019414610a27565b610f9a565b6109fe91935060203d602011610a05575b6109f681836104c7565b810190610a0c565b9138610935565b503d6109ec565b90816020910312610181575190565b6040513d6000823e3d90fd5b15610a2e57565b608460405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152fd5b90610ac47f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1690565b15610ad357506108f190611098565b604051907f52d1902d0000000000000000000000000000000000000000000000000000000082526020826004816001600160a01b0387165afa60009281610bb6575b50610b855760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608490fd5b6108f1926109d67f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60009414610a27565b610bd091935060203d602011610a05576109f681836104c7565b9138610b15565b15610bde57565b608460405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b6001600160a01b0390610c6b60ff60005460081c16610c6681610bd7565b610bd7565b167fffffffffffffffffffffffff0000000000000000000000000000000000000000609754161760975560e01c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000060c954161760c955565b90816020910312610181575180151581036101815790565b6020601f60a46001600160a01b03601f199497969597169560405194859384927ffdef91060000000000000000000000000000000000000000000000000000000084526001600160a01b038b1660048501526001600160a01b03891660248501527f60b96ff9fb5f29153c29c1747515b8be4ee523d686cc6f453ec294b0afa7293260448501526080606485015280608485015280600086860137600085828601015201168101030181865afa908115610e4057600091610e11575b5015610da257505050565b6040517f32dbe3b40000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015292821660248401521660448201527f60b96ff9fb5f29153c29c1747515b8be4ee523d686cc6f453ec294b0afa729326064820152608490fd5b610e33915060203d602011610e39575b610e2b81836104c7565b810190610cc3565b38610d97565b503d610e21565b610a1b565b6020601f60a46001600160a01b03601f199497969597169560405194859384927ffdef91060000000000000000000000000000000000000000000000000000000084526001600160a01b038b1660048501526001600160a01b03891660248501527fffb51f414ffad7ae6aa3ebe7a53cbd03087d492fd38b0f6cbaa8704085baac4560448501526080606485015280608485015280600086860137600085828601015201168101030181865afa908115610e4057600091610f7b575b5015610f0c57505050565b6040517f32dbe3b40000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015292821660248401521660448201527fffb51f414ffad7ae6aa3ebe7a53cbd03087d492fd38b0f6cbaa8704085baac456064820152608490fd5b610f94915060203d602011610e3957610e2b81836104c7565b38610f01565b91610fa483611098565b6001600160a01b0383167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511590811591611090575b50610fe8575050565b6110859160008060405193610ffe6060866104c7565b602785527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208601527f206661696c6564000000000000000000000000000000000000000000000000006040860152602081519101845af43d15611088573d91611068836104ef565b9261107660405194856104c7565b83523d6000602085013e6112bd565b50565b6060916112bd565b905038610fdf565b803b15611111576001600160a01b03167fffffffffffffffffffffffff00000000000000000000000000000000000000007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416177f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b608460405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b6000602091604051838101906301ffc9a760e01b82526301ffc9a760e01b6024820152602481526111ad6044826104c7565b5191617530fa6000513d826111ce575b50816111c7575090565b9050151590565b602011159150386111bd565b6000602091604051838101906301ffc9a760e01b82527fffffffff000000000000000000000000000000000000000000000000000000006024820152602481526111ad6044826104c7565b6000906020926040517fffffffff00000000000000000000000000000000000000000000000000000000858201926301ffc9a760e01b8452166024820152602481526111ad6044826104c7565b1561127957565b606460405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b919290156112e057508151156112d1575090565b6112dd903b1515611272565b90565b8251909150156112f35750805190602001fd5b6040519062461bcd60e51b8252602060048301528181519182602483015260005b838110611336575050601f19601f836000604480968601015201168101030190fd5b6020828201810151604487840101528593500161131456fea2646970667358221220526e399aeea1b5d45676a880e0636da36260cde09428fefbb5fa64b26423b07a64736f6c634300081c0033";

type InterfaceBasedRegistryMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InterfaceBasedRegistryMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InterfaceBasedRegistryMock__factory extends ContractFactory {
  constructor(...args: InterfaceBasedRegistryMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      InterfaceBasedRegistryMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): InterfaceBasedRegistryMock__factory {
    return super.connect(runner) as InterfaceBasedRegistryMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InterfaceBasedRegistryMockInterface {
    return new Interface(_abi) as InterfaceBasedRegistryMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InterfaceBasedRegistryMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as InterfaceBasedRegistryMock;
  }
}
