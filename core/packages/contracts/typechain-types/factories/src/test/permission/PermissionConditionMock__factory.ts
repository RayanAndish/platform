/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../../../common";
import type {
  PermissionConditionMock,
  PermissionConditionMockInterface,
} from "../../../../src/test/permission/PermissionConditionMock";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "answer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_where",
        type: "address",
      },
      {
        internalType: "address",
        name: "_who",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_permissionId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "isGranted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolVersion",
    outputs: [
      {
        internalType: "uint8[3]",
        name: "",
        type: "uint8[3]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_answer",
        type: "bool",
      },
    ],
    name: "setAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234602257600160ff19600054161760005561038690816100288239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a714610215575080632675fdd01461017a5780632ae9c600146100ce57806385bb7d69146100ab5763f01b7dd21461005657600080fd5b346100a65760206003193601126100a6576004358015158091036100a65760ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060005416911617600055600080f35b600080fd5b346100a65760006003193601126100a657602060ff600054166040519015158152f35b346100a65760006003193601126100a6576060806100eb8161032a565b36903760405181810181811067ffffffffffffffff82111761014b5760405260018152600460208201526000604082015260405190816000905b6003821061013257505050f35b60208060019260ff865116815201930191019091610125565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b346100a65760806003193601126100a6576101936102e4565b5061019c610307565b5060643567ffffffffffffffff81116100a657366023820112156100a65780600401359067ffffffffffffffff821161014b576101e26020601f19601f8501160161032a565b9180835236602482840101116100a6576000928160246020940184830137010152602060ff600054166040519015158152f35b346100a65760206003193601126100a657600435907fffffffff0000000000000000000000000000000000000000000000000000000082168092036100a657817f2675fdd000000000000000000000000000000000000000000000000000000000602093149081156102ba575b8115610290575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501483610289565b7f2ae9c6000000000000000000000000000000000000000000000000000000000081149150610282565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036100a657565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036100a657565b90601f19601f604051930116820182811067ffffffffffffffff82111761014b5760405256fea26469706673582212202de2583f8c359a1b22ffa9ab1b656b4a37d9a8f2af20bc6a2fc5cd98617db9ce64736f6c634300081c0033";

type PermissionConditionMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PermissionConditionMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PermissionConditionMock__factory extends ContractFactory {
  constructor(...args: PermissionConditionMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PermissionConditionMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PermissionConditionMock__factory {
    return super.connect(runner) as PermissionConditionMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PermissionConditionMockInterface {
    return new Interface(_abi) as PermissionConditionMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PermissionConditionMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PermissionConditionMock;
  }
}
