/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../../../common";
import type {
  DAORegistry,
  DAORegistryInterface,
} from "../../../../src/framework/dao/DAORegistry";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "ContractAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "ContractERC165SupportInvalid",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "ContractInterfaceInvalid",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        internalType: "address",
        name: "where",
        type: "address",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "permissionId",
        type: "bytes32",
      },
    ],
    name: "DaoUnauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "ENSNotSupported",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "subdomain",
        type: "string",
      },
    ],
    name: "InvalidDaoSubdomain",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "subdomain",
        type: "string",
      },
    ],
    name: "DAORegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "REGISTER_DAO_PERMISSION_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_REGISTRY_PERMISSION_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dao",
    outputs: [
      {
        internalType: "contract IDAO",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "entries",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IDAO",
        name: "_managingDao",
        type: "address",
      },
      {
        internalType: "contract ENSSubdomainRegistrar",
        name: "_subdomainRegistrar",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolVersion",
    outputs: [
      {
        internalType: "uint8[3]",
        name: "",
        type: "uint8[3]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IDAO",
        name: "dao",
        type: "address",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "subdomain",
        type: "string",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subdomainRegistrar",
    outputs: [
      {
        internalType: "contract ENSSubdomainRegistrar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetInterfaceId",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a080604052346100dc57306080526000549060ff8260081c1661008a575060ff8082160361004f575b60405161175290816100e282396080518181816101e3015281816104ed01526105530152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610029565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8062077393146100d65780632ae9c600146100d15780633659cfe6146100cc5780634162169f146100c757806344162ef8146100c2578063485cc955146100bd5780634f1ef286146100b857806352d1902d146100b357806374574eb7146100ae578063a2298b4b146100a9578063ede49739146100a45763f29ee1251461009f57600080fd5b6106f9565b610684565b610649565b61060e565b610538565b610492565b6102ea565b6102a7565b610280565b6101b6565b610112565b6100eb565b60009103126100e657565b600080fd5b346100e65760006003193601126100e65760206001600160a01b0360fb5416604051908152f35b346100e65760006003193601126100e657606080604051610133828261041c565b36903760405181810181811067ffffffffffffffff8211176101a0578290604052600182526004602083015260006040830152604051918291820190826000905b60038210610183575050500390f35b825160ff1681528594506020928301926001929092019101610174565b6103ed565b6001600160a01b038116036100e657565b346100e65760206003193601126100e65761027e6004356101d6816101a5565b6102406001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661020f8130141561073c565b6001600160a01b037f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416146107ad565b61025a6001600160a01b0360975416369033903090610ee2565b60405190602061026a818461041c565b60008352601f198101903690840137610bc4565b005b346100e65760006003193601126100e65760206001600160a01b0360975416604051908152f35b346100e65760006003193601126100e657602060c95460e01b7fffffffff0000000000000000000000000000000000000000000000000000000060405191168152f35b346100e65760406003193601126100e657600435610307816101a5565b610361602435610316816101a5565b6000549261034560ff600886901c161561032f565b1590565b809581966103df575b81156103bf575b5061081e565b83610358600160ff196000541617600055565b6103a65761088f565b61036757005b61037761ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b6103ba61010061ff00196000541617600055565b61088f565b303b159150816103d1575b503861033f565b60ff166001149050386103ca565b600160ff8216109150610338565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f601f19910116810190811067ffffffffffffffff8211176101a057604052565b67ffffffffffffffff81116101a057601f01601f191660200190565b9291926104678261043f565b91610475604051938461041c565b8294818452818301116100e6578281602093846000960137010152565b60406003193601126100e6576004356104aa816101a5565b6024359067ffffffffffffffff82116100e657366023830112156100e6576104df61027e92369060248160040135910161045b565b906105196001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661020f8130141561073c565b6105336001600160a01b0360975416369033903090610ee2565b610d1a565b346100e65760006003193601126100e6576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105a4576040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152602090f35b608460405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b346100e65760006003193601126100e65760206040517f60b96ff9fb5f29153c29c1747515b8be4ee523d686cc6f453ec294b0afa729328152f35b346100e65760006003193601126100e65760206040517fde5e253d6956bc5fb69cfa564733633f4e53b143e42859306cd13cdc548562158152f35b346100e65760606003193601126100e6576004356106a1816101a5565b6024356106ad816101a5565b6044359167ffffffffffffffff83116100e657366023840112156100e65782600401359167ffffffffffffffff83116100e65736602484860101116100e657602461027e940191610922565b346100e65760206003193601126100e6576001600160a01b0360043561071e816101a5565b1660005260ca602052602060ff604060002054166040519015158152f35b1561074357565b608460405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152fd5b156107b457565b608460405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152fd5b1561082557565b608460405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b906001600160a01b0380926108b460ff60005460081c166108af81610e59565b610e59565b1673ffffffffffffffffffffffffffffffffffffffff19609754161760975563549ea75a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000060c954161760c9551673ffffffffffffffffffffffffffffffffffffffff1960fb54161760fb55565b6001600160a01b0390939192936109428260975416369033903090611034565b169161094d83611176565b81610994575b6001600160a01b039061098f7fbc0b11fe649bb4d67c7fb40936163e5423f45c3ae83fbd8f8f8c75e1a3fa97af93604051938493169683610b24565b0390a3565b6109b56109a960fb546001600160a01b031690565b6001600160a01b031690565b906001600160a01b03821615610ad9576109d261032b84876112fe565b610aa0576109e136848761045b565b6020815191012091803b156100e6576040517f89bb414500000000000000000000000000000000000000000000000000000000815260048101939093526001600160a01b03851660248401526000908390604490829084905af18015610a9b577fbc0b11fe649bb4d67c7fb40936163e5423f45c3ae83fbd8f8f8c75e1a3fa97af936001600160a01b039361098f92610a80575b509350509050610953565b80610a8f6000610a959361041c565b806100db565b38610a75565b610b38565b6040517f3a5bf49b00000000000000000000000000000000000000000000000000000000815280610ad5858860048401610b24565b0390fd5b7ff72f946a0000000000000000000000000000000000000000000000000000000060005260046000fd5b601f8260209493601f19938186528686013760008582860101520116010190565b916020610b35938181520191610b03565b90565b6040513d6000823e3d90fd5b908160209103126100e6575190565b15610b5a57565b608460405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152fd5b90610bf07f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1690565b15610c015750610bff906114a6565b565b604051907f52d1902d0000000000000000000000000000000000000000000000000000000082526020826004816001600160a01b0387165afa60009281610ce9575b50610cb35760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608490fd5b610bff92610ce47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60009414610b53565b6113a8565b610d0c91935060203d602011610d13575b610d04818361041c565b810190610b44565b9138610c43565b503d610cfa565b90610d467f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1690565b15610d555750610bff906114a6565b604051907f52d1902d0000000000000000000000000000000000000000000000000000000082526020826004816001600160a01b0387165afa60009281610e38575b50610e075760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608490fd5b610bff92610ce47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60019414610b53565b610e5291935060203d602011610d1357610d04818361041c565b9138610d97565b15610e6057565b608460405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b908160209103126100e6575180151581036100e65790565b60206001600160a01b03610f7792959493951693604051809381927ffdef91060000000000000000000000000000000000000000000000000000000083526001600160a01b03891660048401526001600160a01b03871660248401527f60b96ff9fb5f29153c29c1747515b8be4ee523d686cc6f453ec294b0afa7293260448401526080606484015260848301906000610b03565b0381865afa908115610a9b57600091611005575b5015610f9657505050565b6040517f32dbe3b40000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015292821660248401521660448201527f60b96ff9fb5f29153c29c1747515b8be4ee523d686cc6f453ec294b0afa729326064820152608490fd5b611027915060203d60201161102d575b61101f818361041c565b810190610eca565b38610f8b565b503d611015565b60206001600160a01b036110c992959493951693604051809381927ffdef91060000000000000000000000000000000000000000000000000000000083526001600160a01b03891660048401526001600160a01b03871660248401527fde5e253d6956bc5fb69cfa564733633f4e53b143e42859306cd13cdc5485621560448401526080606484015260848301906000610b03565b0381865afa908115610a9b57600091611157575b50156110e857505050565b6040517f32dbe3b40000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015292821660248401521660448201527fde5e253d6956bc5fb69cfa564733633f4e53b143e42859306cd13cdc548562156064820152608490fd5b611170915060203d60201161102d5761101f818361041c565b386110dd565b6001600160a01b0381168060005260ca60205260ff6040600020541661129657506111fc60c95460e01b60206000604051828101906301ffc9a760e01b82526301ffc9a760e01b6024820152602481526111d160448261041c565b519086617530fa903d600051908361128a575b5082611280575b508161126e575b8161126357501590565b61122d57611220610bff916001600160a01b031660005260ca602052604060002090565b600160ff19825416179055565b7f71023c8a000000000000000000000000000000000000000000000000000000006000526001600160a01b031660045260246000fd5b61032b9150836115f6565b90506112798361157e565b15906111f2565b15159150386111eb565b602011159250386111e4565b7ffdcce17f0000000000000000000000000000000000000000000000000000000060005260045260246000fd5b908210156112cf570190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60005b82811061131057505050600190565b61135661135061134a6113248487876112c3565b357fff000000000000000000000000000000000000000000000000000000000000001690565b60f81c90565b60ff1690565b606081118061139e575b61138b57602f811180611394575b61138b57602d1461138157505050600090565b6001905b01611301565b50600190611385565b50603a811061136e565b50607b8110611360565b916113b2836114a6565b6001600160a01b0383167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151159081159161149e575b506113f6575050565b611493916000806040519361140c60608661041c565b602785527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208601527f206661696c6564000000000000000000000000000000000000000000000000006040860152602081519101845af43d15611496573d916114768361043f565b92611484604051948561041c565b83523d6000602085013e61168e565b50565b60609161168e565b9050386113ed565b803b15611514576001600160a01b031673ffffffffffffffffffffffffffffffffffffffff197f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416177f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b608460405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b6000602091604051838101906301ffc9a760e01b82527fffffffff000000000000000000000000000000000000000000000000000000006024820152602481526115c960448261041c565b5191617530fa6000513d826115ea575b50816115e3575090565b9050151590565b602011159150386115d9565b6000906020926040517fffffffff00000000000000000000000000000000000000000000000000000000858201926301ffc9a760e01b8452166024820152602481526115c960448261041c565b1561164a57565b606460405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b919290156116ae57508151156116a2575090565b610b35903b1515611643565b8251909150156116c15750805190602001fd5b6040519062461bcd60e51b8252602060048301528181519182602483015260005b838110611704575050601f19601f836000604480968601015201168101030190fd5b602082820181015160448784010152859350016116e256fea2646970667358221220b45b72eca87d730a64967a700496afadba4b1bd30b5ebc9990a09cfe2da90fe664736f6c634300081c0033";

type DAORegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAORegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAORegistry__factory extends ContractFactory {
  constructor(...args: DAORegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DAORegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DAORegistry__factory {
    return super.connect(runner) as DAORegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAORegistryInterface {
    return new Interface(_abi) as DAORegistryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DAORegistry {
    return new Contract(address, _abi, runner) as unknown as DAORegistry;
  }
}
