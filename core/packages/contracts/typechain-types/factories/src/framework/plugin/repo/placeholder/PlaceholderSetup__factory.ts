/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../../../../../common";
import type {
  PlaceholderSetup,
  PlaceholderSetupInterface,
} from "../../../../../../src/framework/plugin/repo/placeholder/PlaceholderSetup";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NonUpgradeablePlugin",
    type: "error",
  },
  {
    inputs: [],
    name: "PlaceholderSetupCannotBeUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "prepareInstallation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "helpers",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "enum PermissionLib.Operation",
                name: "operation",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "where",
                type: "address",
              },
              {
                internalType: "address",
                name: "who",
                type: "address",
              },
              {
                internalType: "address",
                name: "condition",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "permissionId",
                type: "bytes32",
              },
            ],
            internalType: "struct PermissionLib.MultiTargetPermission[]",
            name: "permissions",
            type: "tuple[]",
          },
        ],
        internalType: "struct IPluginSetup.PreparedSetupData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "plugin",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "currentHelpers",
            type: "address[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IPluginSetup.SetupPayload",
        name: "",
        type: "tuple",
      },
    ],
    name: "prepareUninstallation",
    outputs: [
      {
        components: [
          {
            internalType: "enum PermissionLib.Operation",
            name: "operation",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "where",
            type: "address",
          },
          {
            internalType: "address",
            name: "who",
            type: "address",
          },
          {
            internalType: "address",
            name: "condition",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "permissionId",
            type: "bytes32",
          },
        ],
        internalType: "struct PermissionLib.MultiTargetPermission[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dao",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_fromBuild",
        type: "uint16",
      },
      {
        components: [
          {
            internalType: "address",
            name: "plugin",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "currentHelpers",
            type: "address[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IPluginSetup.SetupPayload",
        name: "_payload",
        type: "tuple",
      },
    ],
    name: "prepareUpdate",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "helpers",
            type: "address[]",
          },
          {
            components: [
              {
                internalType: "enum PermissionLib.Operation",
                name: "operation",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "where",
                type: "address",
              },
              {
                internalType: "address",
                name: "who",
                type: "address",
              },
              {
                internalType: "address",
                name: "condition",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "permissionId",
                type: "bytes32",
              },
            ],
            internalType: "struct PermissionLib.MultiTargetPermission[]",
            name: "permissions",
            type: "tuple[]",
          },
        ],
        internalType: "struct IPluginSetup.PreparedSetupData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolVersion",
    outputs: [
      {
        internalType: "uint8[3]",
        name: "",
        type: "uint8[3]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a080604052346023576000608052610437908161002982396080518161020a0152f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146102ef575080632ae9c6001461022e5780635c60da1b146101dd5780639cb0a12414610179578063a8a9c29e146100f75763f10832f11461006157600080fd5b346100f25760406003193601126100f25761007a6103be565b5060243567ffffffffffffffff81116100f257366023820112156100f257806004013567ffffffffffffffff81116100f257369101602401116100f257606060206100c36103e1565b82815201527fa8a9f28c0000000000000000000000000000000000000000000000000000000060005260046000fd5b600080fd5b346100f25760606003193601126100f2576101106103be565b5060243561ffff8116036100f25760443567ffffffffffffffff81116100f257600319606091360301126100f2576060602061014a6103e1565b82815201527fa11281010000000000000000000000000000000000000000000000000000000060005260046000fd5b346100f25760406003193601126100f2576101926103be565b5060243567ffffffffffffffff81116100f257600319606091360301126100f2577fa8a9f28c0000000000000000000000000000000000000000000000000000000060005260046000fd5b346100f25760006003193601126100f257602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346100f25760006003193601126100f25760606040518181019080821067ffffffffffffffff8311176102c057829160405236903760405181810181811067ffffffffffffffff8211176102c05760405260018152600460208201526000604082015260405190816000905b600382106102a757505050f35b60208060019260ff86511681520193019101909161029a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b346100f25760206003193601126100f257600435907fffffffff0000000000000000000000000000000000000000000000000000000082168092036100f257817f99718b500000000000000000000000000000000000000000000000000000000060209314908115610394575b811561036a575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501483610363565b7f2ae9c600000000000000000000000000000000000000000000000000000000008114915061035c565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036100f257565b604051906040820182811067ffffffffffffffff8211176102c05760405256fea2646970667358221220c1c851e0da7039f8ff435cd9bb67746d576f23406c2a568280ccf0cb9dfe161164736f6c634300081c0033";

type PlaceholderSetupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PlaceholderSetupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PlaceholderSetup__factory extends ContractFactory {
  constructor(...args: PlaceholderSetupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PlaceholderSetup & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PlaceholderSetup__factory {
    return super.connect(runner) as PlaceholderSetup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PlaceholderSetupInterface {
    return new Interface(_abi) as PlaceholderSetupInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PlaceholderSetup {
    return new Contract(address, _abi, runner) as unknown as PlaceholderSetup;
  }
}
