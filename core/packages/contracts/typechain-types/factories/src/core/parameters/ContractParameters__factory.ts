/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../../../common";
import type {
  ContractParameters,
  ContractParametersInterface,
} from "../../../../src/core/parameters/ContractParameters";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "executionDelay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guardianDelay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minMemberCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxMemberCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalThreshold",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ContractParameters.DAOParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "DAOParamsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minInvestment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxInvestment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "investmentFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdrawalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "performanceFee",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ContractParameters.FinanceParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "FinanceParamsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minStakeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxStakeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardRate",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "tierThresholds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "tierMultipliers",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct ContractParameters.StakingParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "StakingParamsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minVotingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVotingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quorumPercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minProposalThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingDelay",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ContractParameters.VotingParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "VotingParamsUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "daoParams",
    outputs: [
      {
        internalType: "uint256",
        name: "executionDelay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "guardianDelay",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minMemberCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxMemberCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "proposalThreshold",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "financeParams",
    outputs: [
      {
        internalType: "uint256",
        name: "minInvestment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxInvestment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "investmentFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawalFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "performanceFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDAOParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "executionDelay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guardianDelay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minMemberCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxMemberCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalThreshold",
            type: "uint256",
          },
        ],
        internalType: "struct ContractParameters.DAOParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFinanceParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minInvestment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxInvestment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "investmentFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdrawalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "performanceFee",
            type: "uint256",
          },
        ],
        internalType: "struct ContractParameters.FinanceParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakingParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minStakeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxStakeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardRate",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "tierThresholds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "tierMultipliers",
            type: "uint256[]",
          },
        ],
        internalType: "struct ContractParameters.StakingParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVotingParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minVotingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVotingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quorumPercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minProposalThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingDelay",
            type: "uint256",
          },
        ],
        internalType: "struct ContractParameters.VotingParams",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingParams",
    outputs: [
      {
        internalType: "uint256",
        name: "minStakeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxStakeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "executionDelay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guardianDelay",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minMemberCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxMemberCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalThreshold",
            type: "uint256",
          },
        ],
        internalType: "struct ContractParameters.DAOParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "updateDAOParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minInvestment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxInvestment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "investmentFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdrawalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "performanceFee",
            type: "uint256",
          },
        ],
        internalType: "struct ContractParameters.FinanceParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "updateFinanceParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minStakeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxStakeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardRate",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "tierThresholds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "tierMultipliers",
            type: "uint256[]",
          },
        ],
        internalType: "struct ContractParameters.StakingParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "updateStakingParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minVotingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxVotingPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quorumPercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minProposalThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votingDelay",
            type: "uint256",
          },
        ],
        internalType: "struct ContractParameters.VotingParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "updateVotingParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingParams",
    outputs: [
      {
        internalType: "uint256",
        name: "minVotingPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxVotingPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quorumPercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minProposalThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votingDelay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346104dc57600180546001600160a01b03199081169091556000805433928116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600160025560a061006681610500565b600481526020810190601f198301928336843761008281610500565b936004855236602086013760405160c081016001600160401b0381118282101761047e5760405268056bc75e2d63100000815269021e19e0c9bab2400000602082015262278d006040820152600a60608201528260808201520192835268056bc75e2d6310000060035569021e19e0c9bab240000060045562278d00600555600a600655519060018060401b03821161047e5768010000000000000000821161047e57600754826007558083106104a8575b506007600052602060002060005b8381106104945784518051906001600160401b03821161047e5768010000000000000000821161047e576008548260085580831061044a575b5060200190600860005260206000209160005b828110610436576000600754156104225760079081905268056bc75e2d63100000600080516020611502833981519152555460009060011015610422576007808252681b1ae4d6e2ef5000007fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689555460021015610422576007808252683635c9adc5dea000007fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a555460031015610422576007815269010f0cf064dd592000007fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b5560085415610422576008808252600a600080516020611522833981519152555460011015610422576008808252600f7ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee455546002101561042257600880825260147ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee55554600310156104225760089052601e7ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee65561032c6104e1565b6201518081526020810162093a8081526040820160338152606083019168056bc75e2d63100000835260808401936201518085525160095551600a5551600b5551600c5551600d5561037c6104e1565b670de0b6b3a7640000815260208101683635c9adc5dea000008152604082016001815260608301916005835260808401936014855251600e5551600f555160105551601155516012556103cd6104e1565b6202a3008152602081016201518081526040820160038152606083019160648352608084019368056bc75e2d6310000085525160135551601455516015555160165551601755604051610fdc90816105268239f35b634e487b7160e01b81526032600452602490fd5b60019060208351930192818601550161018e565b60086000526000805160206115228339815191529081019083015b818110610472575061017b565b60008155600101610465565b634e487b7160e01b600052604160045260246000fd5b600190602084519401938184015501610142565b60076000526000805160206115028339815191529081019083015b8181106104d05750610134565b600081556001016104c3565b600080fd5b6040519060a082016001600160401b0381118382101761047e57604052565b6040519190601f01601f191682016001600160401b0381118382101761047e5760405256fe6080604052600436101561001257600080fd5b60003560e01c80630d04cfbd14610c735780631dd113a714610c3c5780631e867d5914610bf75780631ee6070214610bb2578063604b17c314610ade578063624cfa7d146109db578063640c8222146106b95780636a542a8c14610637578063705fc046146104d3578063715018a61461044357806379ba50971461032d57806381c8659f146102ab5780638da5cb5b14610277578063a6c8210e146101f3578063b79644e4146101a9578063e30c3978146101755763f2fde38b146100d757600080fd5b346101705760206003193601126101705760043573ffffffffffffffffffffffffffffffffffffffff811680910361017057610111610f41565b8073ffffffffffffffffffffffffffffffffffffffff19600154161760015573ffffffffffffffffffffffffffffffffffffffff600054167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700600080a3005b600080fd5b3461017057600060031936011261017057602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b3461017057600060031936011261017057600e54600f5460105460115460125460408051958652602086019490945292840191909152606083015260808201528060a081015b0390f35b346101705760006003193601126101705761020c610f16565b5060a060405161021b81610ed7565b6009548152600a546020820152600b546040820152600c546060820152600d546080820152610275604051809260808091805184526020810151602085015260408101516040850152606081015160608501520151910152565bf35b3461017057600060031936011261017057602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b34610170576000600319360112610170576102c4610f16565b5060a06040516102d381610ed7565b60135481526014546020820152601554604082015260165460608201526017546080820152610275604051809260808091805184526020810151602085015260408101516040850152606081015160608501520151910152565b34610170576000600319360112610170573373ffffffffffffffffffffffffffffffffffffffff60015416036103d95773ffffffffffffffffffffffffffffffffffffffff19600154166001556000543373ffffffffffffffffffffffffffffffffffffffff1982161760005573ffffffffffffffffffffffffffffffffffffffff3391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b608460405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060448201527f6e6577206f776e657200000000000000000000000000000000000000000000006064820152fd5b346101705760006003193601126101705761045c610f41565b73ffffffffffffffffffffffffffffffffffffffff1960015416600155600073ffffffffffffffffffffffffffffffffffffffff815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461017057600060031936011261017057606060a06040516104f481610ebb565b600081526000602082015260006040820152600083820152826080820152015260405161052081610ebb565b600354815260045490602081019182526005546040820190815260065460608301908152604051906007548083528260208101600760005260206000209260005b81811061061e57505061057692500383610ef3565b60808401918252604051926008548085526020850190600860005260206000209060005b81811061060857505050918493916105ba6101ef966105f5950386610ef3565b60a08701948552604051978897602089525160208901525160408801525160608701525160808601525160c060a086015260e0850190610d94565b9051601f198483030160c0850152610d94565b825484526020909301926001928301920161059a565b8454835260019485019487945060209093019201610561565b3461017057600060031936011261017057610650610f16565b5060a060405161065f81610ed7565b600e548152600f546020820152601054604082015260115460608201526012546080820152610275604051809260808091805184526020810151602085015260408101516040850152606081015160608501520151910152565b346101705760206003193601126101705760043567ffffffffffffffff8111610170578060040160c06003198336030112610170576106f6610f41565b80356024830135918282101561099757608484016107148183610e13565b60a487019291506107258385610e13565b919050036109535783600355846004556064604487013596876005550135806006556107518285610e13565b9067ffffffffffffffff82116108ca576801000000000000000082116108ca576007548260075580831061090d575b506007600052602060002060005b8381106108f957505050506107a38385610e13565b979067ffffffffffffffff89116108ca576801000000000000000089116108ca5760085489600855808a10610884575b5097600860005260206000209860005b828110610870577fa1ed828e6a61d0a58021296546cf328485047dafadf88f7d005cce68e27548328a8a61086b8b6108598c6108536108428e8e8e6040519a8b9a60208c5260208c015260408b015260608a0152608089015285610e49565b60c060a089015260e0880191610e7e565b92610e49565b90601f198584030160c0860152610e7e565b0390a1005b60019060208335930192818d0155016107e3565b60086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3908101908a015b8181106108be57506107d3565b600081556001016108b1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60019060208435940193818401550161078e565b60076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6889081019083015b8181106109475750610780565b6000815560010161093a565b606460405162461bcd60e51b815260206004820152601360248201527f496e76616c6964207469657220617272617973000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152601560248201527f496e76616c6964207374616b6520616d6f756e747300000000000000000000006044820152fd5b346101705760a0600319360112610170576109f4610f41565b60043560243580821015610a9a57604435610a136103e8821115610dc8565b60643591610a256103e8841115610dc8565b60843593610a376103e8861115610dc8565b600e55600f556010556011556012557fdd1f1427f558d7068d4d00cd1ac8a60c4947daf2b17ab24b9b014e8b077aef3760a0604051610a978160043581526024356020820152604435604082015260643560608201526080608435910152565ba1005b606460405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e766573746d656e7420616d6f756e74730000000000006044820152fd5b346101705760a060031936011261017057610af7610f41565b60643560443581811015610b6e576004356013556024356014556015556016556084356017557f6a07c18750aa78c0ee923c0ec5d179ff3419487afa2602e8219029eb2854c1a360a0604051610a978160043581526024356020820152604435604082015260643560608201526080608435910152565b606460405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206d656d62657220636f756e747300000000000000000000006044820152fd5b3461017057600060031936011261017057601354601454601554601654601754604080519586526020860194909452928401919091526060830152608082015260a090f35b3461017057600060031936011261017057600954600a54600b54600c54600d54604080519586526020860194909452928401919091526060830152608082015260a090f35b3461017057600060031936011261017057608060035460045460055460065491604051938452602084015260408301526060820152f35b346101705760a060031936011261017057610c8c610f41565b60043560243580821015610d50576044359160648311610d0c57600955600a55600b55606435600c55608435600d557f63cdf3d503175008350407def75352ba7321de34cfc0aff2d3f2b03d3af0971b60a0604051610a978160043581526024356020820152604435604082015260643560608201526080608435910152565b606460405162461bcd60e51b815260206004820152601960248201527f496e76616c69642071756f72756d2070657263656e74616765000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152601660248201527f496e76616c696420766f74696e6720706572696f6473000000000000000000006044820152fd5b906020808351928381520192019060005b818110610db25750505090565b8251845260209384019390920191600101610da5565b15610dcf57565b606460405162461bcd60e51b815260206004820152600c60248201527f46656520746f6f206869676800000000000000000000000000000000000000006044820152fd5b903590601e1981360301821215610170570180359067ffffffffffffffff821161017057602001918160051b3603831361017057565b9035601e198236030181121561017057016020813591019167ffffffffffffffff8211610170578160051b3603831361017057565b90918281527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83116101705760209260051b809284830137010190565b60c0810190811067ffffffffffffffff8211176108ca57604052565b60a0810190811067ffffffffffffffff8211176108ca57604052565b90601f601f19910116810190811067ffffffffffffffff8211176108ca57604052565b60405190610f2382610ed7565b60006080838281528260208201528260408201528260608201520152565b73ffffffffffffffffffffffffffffffffffffffff600054163303610f6257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea264697066735822122022724f8df6ee523915bf2ab58bfae9d3ac1a86f8b875e8deaacab1223367c32e64736f6c634300081c0033a66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688f3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3";

type ContractParametersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractParametersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractParameters__factory extends ContractFactory {
  constructor(...args: ContractParametersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ContractParameters & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ContractParameters__factory {
    return super.connect(runner) as ContractParameters__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractParametersInterface {
    return new Interface(_abi) as ContractParametersInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ContractParameters {
    return new Contract(address, _abi, runner) as unknown as ContractParameters;
  }
}
