/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  IPermissionCondition,
  IPermissionConditionInterface,
} from "../../../../../../@aragon/osx-commons-contracts/src/permission/condition/IPermissionCondition";
import { Contract, Interface, type ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_where",
        type: "address",
      },
      {
        internalType: "address",
        name: "_who",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_permissionId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "isGranted",
    outputs: [
      {
        internalType: "bool",
        name: "isPermitted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IPermissionCondition__factory {
  static readonly abi = _abi;
  static createInterface(): IPermissionConditionInterface {
    return new Interface(_abi) as IPermissionConditionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPermissionCondition {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IPermissionCondition;
  }
}
