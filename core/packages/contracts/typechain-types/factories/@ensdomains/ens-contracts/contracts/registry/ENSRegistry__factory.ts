/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  ENSRegistry,
  ENSRegistryInterface,
} from "../../../../../@ensdomains/ens-contracts/contracts/registry/ENSRegistry";
import type { NonPayableOverrides } from "../../../../../common";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NewOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "NewResolver",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "ttl",
        type: "uint64",
      },
    ],
    name: "NewTTL",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "recordExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "resolver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "ttl",
        type: "uint64",
      },
    ],
    name: "setRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "setResolver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "setSubnodeOwner",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "ttl",
        type: "uint64",
      },
    ],
    name: "setSubnodeRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "ttl",
        type: "uint64",
      },
    ],
    name: "setTTL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "ttl",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234604e5760008080526020527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb580546001600160a01b031916331790556109df90816100548239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c9081630178b8bf146106a65750806302571be31461067757806306ab59231461064657806314ab90381461053957806316a25cbd146104fd5780631896f70a1461041a5780635b0fc9c31461033e5780635ef2c7f0146102e6578063a22cb4651461023f578063cf4088231461013c578063e985e9c5146100df5763f79fe538146100a357600080fd5b346100da5760206003193601126100da57600435600052600060205260206001600160a01b03604060002054161515604051908152f35b600080fd5b346100da5760406003193601126100da576100f8610706565b6001600160a01b036101086106f0565b911660005260016020526001600160a01b0360406000209116600052602052602060ff604060002054166040519015158152f35b346100da5760806003193601126100da576004356101586106f0565b906101616106da565b6064359167ffffffffffffffff831683036100da578060005260006020526001600160a01b0360406000205416338114908115610211575b50156100da57807fd4735d920b0f87494915f556dd9b54c8f309026070caea5c737245152564d266602061020f96836000526000825260406000206001600160a01b03821673ffffffffffffffffffffffffffffffffffffffff198254161790556001600160a01b0360405191168152a261085c565b005b9050600052600160205260406000206001600160a01b03331660005260205260ff6040600020541685610199565b346100da5760406003193601126100da57610258610706565b602435908115158092036100da576001600160a01b0390336000526001602052604060002082821660005260205260406000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff851617905560405192835216907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b346100da5760a06003193601126100da576102ff6106da565b6064356001600160a01b03811681036100da576084359067ffffffffffffffff821682036100da5761033961020f93602435600435610743565b61085c565b346100da5760406003193601126100da5760043561035a6106f0565b8160005260006020526001600160a01b03604060002054163381149081156103ec575b50156100da5760207fd4735d920b0f87494915f556dd9b54c8f309026070caea5c737245152564d26691836000526000825260406000206001600160a01b03821673ffffffffffffffffffffffffffffffffffffffff198254161790556001600160a01b0360405191168152a2005b9050600052600160205260406000206001600160a01b03331660005260205260ff604060002054168361037d565b346100da5760406003193601126100da576004356104366106f0565b908060005260006020526001600160a01b03604060002054163381149081156104cf575b50156100da57807f335721b01866dc23fbee8b6b2c7b1e14d6f05c28cd35a2c934239f94095602a060206040516001600160a01b0386168152a260005260006020526001600160a01b036001604060002001911673ffffffffffffffffffffffffffffffffffffffff19825416179055600080f35b9050600052600160205260406000206001600160a01b03331660005260205260ff604060002054168361045a565b346100da5760206003193601126100da576004356000526000602052602067ffffffffffffffff60016040600020015460a01c16604051908152f35b346100da5760406003193601126100da5760043560243567ffffffffffffffff8116918282036100da578060005260006020526001600160a01b0360406000205416338114908115610618575b50156100da57807f1d4f9bbfc9cab89d66e1a1562f2233ccbf1308cb4f63de2ead5787adddb8fa68602061020f95604051908152a260005260006020526001604060002001907fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff7bffffffffffffffff000000000000000000000000000000000000000083549260a01b169116179055565b9050600052600160205260406000206001600160a01b03331660005260205260ff6040600020541684610586565b346100da5760606003193601126100da57602061066f6106646106da565b602435600435610743565b604051908152f35b346100da5760206003193601126100da57602061069560043561071c565b6001600160a01b0360405191168152f35b346100da5760206003193601126100da57602090600435600052600082526001600160a01b03600160406000200154168152f35b604435906001600160a01b03821682036100da57565b602435906001600160a01b03821682036100da57565b600435906001600160a01b03821682036100da57565b60005260006020526001600160a01b036040600020541630811461073d5790565b50600090565b8060005260006020526001600160a01b036040600020541633811490811561082e575b50156100da5760405160208101828152836040830152604082526060820182811067ffffffffffffffff8211176107ff576001600160a01b036020927fce0457fe73731f824cc272376169235128c118b49d344817417c6d108d155e829483604052519020968760005260008452604060002082821673ffffffffffffffffffffffffffffffffffffffff19825416179055168152a390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b9050600052600160205260406000206001600160a01b03331660005260205260ff6040600020541638610766565b8092918160005260006020526001600160a01b038060016040600020015416911690810361094a575b50600052600060205267ffffffffffffffff60016040600020015460a01c169067ffffffffffffffff81169182036108bc57505050565b7f1d4f9bbfc9cab89d66e1a1562f2233ccbf1308cb4f63de2ead5787adddb8fa689161094160209285600052600084526001604060002001907fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff7bffffffffffffffff000000000000000000000000000000000000000083549260a01b169116179055565b604051908152a2565b60207f335721b01866dc23fbee8b6b2c7b1e14d6f05c28cd35a2c934239f94095602a091836000526000825260016040600020018173ffffffffffffffffffffffffffffffffffffffff19825416179055604051908152a2813861088556fea2646970667358221220fb17abdb7292809ae71092945d6df8288c1137c0c039efc29edaa9463d1d53c364736f6c634300081c0033";

type ENSRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ENSRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ENSRegistry__factory extends ContractFactory {
  constructor(...args: ENSRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ENSRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ENSRegistry__factory {
    return super.connect(runner) as ENSRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ENSRegistryInterface {
    return new Interface(_abi) as ENSRegistryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ENSRegistry {
    return new Contract(address, _abi, runner) as unknown as ENSRegistry;
  }
}
