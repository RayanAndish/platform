/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../../common";
import type {
  BaseContract,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";

export interface ContractConstantsInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "ADMIN_ROLE"
      | "DEAD_ADDRESS"
      | "DEVELOPER_ROLE"
      | "ERROR_ALREADY_EXISTS"
      | "ERROR_DOES_NOT_EXIST"
      | "ERROR_EXPIRED"
      | "ERROR_INSUFFICIENT_BALANCE"
      | "ERROR_INVALID_ADDRESS"
      | "ERROR_INVALID_AMOUNT"
      | "ERROR_INVALID_STATE"
      | "ERROR_LOCKED"
      | "ERROR_NOT_STARTED"
      | "ERROR_UNAUTHORIZED"
      | "EVENT_APPROVAL"
      | "EVENT_INVEST"
      | "EVENT_STAKE"
      | "EVENT_TRANSFER"
      | "EVENT_UNSTAKE"
      | "EVENT_VOTE"
      | "INVESTOR_ROLE"
      | "MAX_DESCRIPTION_LENGTH"
      | "MAX_NAME_LENGTH"
      | "MAX_SYMBOL_LENGTH"
      | "MAX_UINT"
      | "ONE_DAY"
      | "ONE_HOUR"
      | "ONE_MONTH"
      | "ONE_WEEK"
      | "ONE_YEAR"
      | "PERCENTAGE_BASE"
      | "STATUS_ACTIVE"
      | "STATUS_CANCELLED"
      | "STATUS_COMPLETED"
      | "STATUS_PENDING"
      | "STATUS_REJECTED"
      | "VALIDATOR_ROLE"
      | "ZERO_ADDRESS"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "ADMIN_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "DEAD_ADDRESS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "DEVELOPER_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ERROR_ALREADY_EXISTS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ERROR_DOES_NOT_EXIST",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ERROR_EXPIRED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ERROR_INSUFFICIENT_BALANCE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ERROR_INVALID_ADDRESS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ERROR_INVALID_AMOUNT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ERROR_INVALID_STATE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ERROR_LOCKED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ERROR_NOT_STARTED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ERROR_UNAUTHORIZED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "EVENT_APPROVAL",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "EVENT_INVEST",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "EVENT_STAKE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "EVENT_TRANSFER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "EVENT_UNSTAKE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "EVENT_VOTE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "INVESTOR_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAX_DESCRIPTION_LENGTH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAX_NAME_LENGTH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAX_SYMBOL_LENGTH",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "MAX_UINT", values?: undefined): string;
  encodeFunctionData(functionFragment: "ONE_DAY", values?: undefined): string;
  encodeFunctionData(functionFragment: "ONE_HOUR", values?: undefined): string;
  encodeFunctionData(functionFragment: "ONE_MONTH", values?: undefined): string;
  encodeFunctionData(functionFragment: "ONE_WEEK", values?: undefined): string;
  encodeFunctionData(functionFragment: "ONE_YEAR", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "PERCENTAGE_BASE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "STATUS_ACTIVE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "STATUS_CANCELLED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "STATUS_COMPLETED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "STATUS_PENDING",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "STATUS_REJECTED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "VALIDATOR_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "ZERO_ADDRESS",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "ADMIN_ROLE", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "DEAD_ADDRESS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "DEVELOPER_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ERROR_ALREADY_EXISTS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ERROR_DOES_NOT_EXIST",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ERROR_EXPIRED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ERROR_INSUFFICIENT_BALANCE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ERROR_INVALID_ADDRESS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ERROR_INVALID_AMOUNT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ERROR_INVALID_STATE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ERROR_LOCKED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ERROR_NOT_STARTED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ERROR_UNAUTHORIZED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "EVENT_APPROVAL",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "EVENT_INVEST",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "EVENT_STAKE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "EVENT_TRANSFER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "EVENT_UNSTAKE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "EVENT_VOTE", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "INVESTOR_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAX_DESCRIPTION_LENGTH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAX_NAME_LENGTH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAX_SYMBOL_LENGTH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "MAX_UINT", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ONE_DAY", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ONE_HOUR", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ONE_MONTH", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ONE_WEEK", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ONE_YEAR", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "PERCENTAGE_BASE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "STATUS_ACTIVE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "STATUS_CANCELLED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "STATUS_COMPLETED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "STATUS_PENDING",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "STATUS_REJECTED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "VALIDATOR_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "ZERO_ADDRESS",
    data: BytesLike
  ): Result;
}

export interface ContractConstants extends BaseContract {
  connect(runner?: ContractRunner | null): ContractConstants;
  waitForDeployment(): Promise<this>;

  interface: ContractConstantsInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  ADMIN_ROLE: TypedContractMethod<[], [string], "view">;

  DEAD_ADDRESS: TypedContractMethod<[], [string], "view">;

  DEVELOPER_ROLE: TypedContractMethod<[], [string], "view">;

  ERROR_ALREADY_EXISTS: TypedContractMethod<[], [string], "view">;

  ERROR_DOES_NOT_EXIST: TypedContractMethod<[], [string], "view">;

  ERROR_EXPIRED: TypedContractMethod<[], [string], "view">;

  ERROR_INSUFFICIENT_BALANCE: TypedContractMethod<[], [string], "view">;

  ERROR_INVALID_ADDRESS: TypedContractMethod<[], [string], "view">;

  ERROR_INVALID_AMOUNT: TypedContractMethod<[], [string], "view">;

  ERROR_INVALID_STATE: TypedContractMethod<[], [string], "view">;

  ERROR_LOCKED: TypedContractMethod<[], [string], "view">;

  ERROR_NOT_STARTED: TypedContractMethod<[], [string], "view">;

  ERROR_UNAUTHORIZED: TypedContractMethod<[], [string], "view">;

  EVENT_APPROVAL: TypedContractMethod<[], [string], "view">;

  EVENT_INVEST: TypedContractMethod<[], [string], "view">;

  EVENT_STAKE: TypedContractMethod<[], [string], "view">;

  EVENT_TRANSFER: TypedContractMethod<[], [string], "view">;

  EVENT_UNSTAKE: TypedContractMethod<[], [string], "view">;

  EVENT_VOTE: TypedContractMethod<[], [string], "view">;

  INVESTOR_ROLE: TypedContractMethod<[], [string], "view">;

  MAX_DESCRIPTION_LENGTH: TypedContractMethod<[], [bigint], "view">;

  MAX_NAME_LENGTH: TypedContractMethod<[], [bigint], "view">;

  MAX_SYMBOL_LENGTH: TypedContractMethod<[], [bigint], "view">;

  MAX_UINT: TypedContractMethod<[], [bigint], "view">;

  ONE_DAY: TypedContractMethod<[], [bigint], "view">;

  ONE_HOUR: TypedContractMethod<[], [bigint], "view">;

  ONE_MONTH: TypedContractMethod<[], [bigint], "view">;

  ONE_WEEK: TypedContractMethod<[], [bigint], "view">;

  ONE_YEAR: TypedContractMethod<[], [bigint], "view">;

  PERCENTAGE_BASE: TypedContractMethod<[], [bigint], "view">;

  STATUS_ACTIVE: TypedContractMethod<[], [bigint], "view">;

  STATUS_CANCELLED: TypedContractMethod<[], [bigint], "view">;

  STATUS_COMPLETED: TypedContractMethod<[], [bigint], "view">;

  STATUS_PENDING: TypedContractMethod<[], [bigint], "view">;

  STATUS_REJECTED: TypedContractMethod<[], [bigint], "view">;

  VALIDATOR_ROLE: TypedContractMethod<[], [string], "view">;

  ZERO_ADDRESS: TypedContractMethod<[], [string], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "ADMIN_ROLE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "DEAD_ADDRESS"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "DEVELOPER_ROLE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "ERROR_ALREADY_EXISTS"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "ERROR_DOES_NOT_EXIST"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "ERROR_EXPIRED"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "ERROR_INSUFFICIENT_BALANCE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "ERROR_INVALID_ADDRESS"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "ERROR_INVALID_AMOUNT"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "ERROR_INVALID_STATE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "ERROR_LOCKED"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "ERROR_NOT_STARTED"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "ERROR_UNAUTHORIZED"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "EVENT_APPROVAL"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "EVENT_INVEST"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "EVENT_STAKE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "EVENT_TRANSFER"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "EVENT_UNSTAKE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "EVENT_VOTE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "INVESTOR_ROLE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "MAX_DESCRIPTION_LENGTH"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "MAX_NAME_LENGTH"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "MAX_SYMBOL_LENGTH"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "MAX_UINT"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "ONE_DAY"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "ONE_HOUR"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "ONE_MONTH"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "ONE_WEEK"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "ONE_YEAR"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "PERCENTAGE_BASE"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "STATUS_ACTIVE"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "STATUS_CANCELLED"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "STATUS_COMPLETED"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "STATUS_PENDING"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "STATUS_REJECTED"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "VALIDATOR_ROLE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "ZERO_ADDRESS"
  ): TypedContractMethod<[], [string], "view">;

  filters: {};
}
